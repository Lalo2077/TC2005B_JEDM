<%- include('../views/includes/head.ejs') %>   
    <body class="yellow-text text-darken-2 background grey darken-4 ">
    <nav>
        <div class="nav-wrapper  pink darken-4">
            <a class="btn pink darken-2 left-align" href="http://localhost:3000/info">Regresar a casa</a>
            <a href="#" class="brand-logo center">Preguntas a responder</a>
            <ul id="nav-mobile" class="right hide-on-med-and-down">
        
        </ul>
        </div>
    </nav>
    
    <br>
    <div class = "container">

        <ul class="collapsible">
            <li>
              <div class="collapsible-header black-text">Laboratorio 12</div>
              <div class="collapsible-body"><span>
                <h5>¿Qué otros templating engines existen para node?</h5>
                <p class="white-text">Existen varios como Pug (antes conocido como Jade), Handlebars, Eta, 
                    twing, LiquidJS, Blade, whiskers, pero el seleccionado para trabajarlo
                    en clase es EJS.</p>
                
                <h5>Referencias</h5>
                <a href="https://expressjs.com/en/resources/template-engines.html">Lista de template engines</a><br>
                <a href="https://pugjs.org/api/getting-started.html">Pug</a><br>
                <a href="https://handlebarsjs.com/">Handlebars</a>
              </span></div>
            </li>
            <li>
              <div class="collapsible-header black-text">Laboratorio 13</div>
              <div class="collapsible-body"><span>
                <h5>¿Qué beneficios encuentras en el estilo MVC?</h5>
                <p class="white-text">La ventaja de poder separar una aplicación
                  en vistas, modelos y controladores hace que los códigos no se 
                  vuelvan codigo espaguetti y con esto se reduce la deuda técnica, un
                  concepto que se usa en el desarrollo para definir el coste de mantener y
                  arreglar un software mal construido.
                </p>

                <h5>¿Encuentras alguna desventaja en el estilo arquitectónico MVC?</h5>
                <p class="white-text">No es como tal una desventaja, pero el usar MVC significa dedicar
                  mucho tiempo a el desarrollo de los controladores, modelos y vistas.
                </p>

                <h5>Referencias</h5>

                <a href="https://www.xataka.com/pro/deuda-tecnica-lastre-para-tecnologicas-estudio-senala-que-informaticos-pierden-casi-dia-trabajo-a-semana-para-solventarlas">
                Deuda técnica</a><br>
                <a href="https://www.freecodecamp.org/news/model-view-architecture/">Como funciona el MVC</a><br>
                <a href="https://developer.mozilla.org/en-US/docs/Glossary/MVC">MVC</a><br>


              </span></div>
            </li>
            <li>
              <div class="collapsible-header black-text">Laboratorio 14</div>
              <div class="collapsible-body"><span>
                <h5>¿Qué beneficios encuentras en el estilo MVC?</h5>
                <p class="white-text">La ventaja de poder separar una aplicación
                  en vistas, modelos y controladores hace que los códigos no se 
                  vuelvan codigo espaguetti y con esto se reduce la deuda técnica, un
                  concepto que se usa en el desarrollo para definir el coste de mantener y
                  arreglar un software mal construido.
                </p>

                <h5>¿Encuentras alguna desventaja en el estilo arquitectónico MVC?</h5>
                <p class="white-text">No es como tal una desventaja, pero el usar MVC significa dedicar
                  mucho tiempo a el desarrollo de los controladores, modelos y vistas.
                </p>

                <h5>Referencias</h5>

                <a href="https://www.xataka.com/pro/deuda-tecnica-lastre-para-tecnologicas-estudio-senala-que-informaticos-pierden-casi-dia-trabajo-a-semana-para-solventarlas">
                Deuda técnica</a><br>
                <a href="https://www.freecodecamp.org/news/model-view-architecture/">Como funciona el MVC</a><br>
                <a href="https://developer.mozilla.org/en-US/docs/Glossary/MVC">MVC</a><br>


              </span></div>
            </li>
            <li>
              <div class="collapsible-header black-text">Laboratorio 17</div>
              <div class="collapsible-body"><span>
                <h5>¿Qué ventajas tiene escribir el código SQL únicamente en la capa del modelo?</h5>
                <p class="white-text">La ventaja de escribirlo en la capa del Modelo es que al modificar 
                  datos y funciones en SQL solamente se modifica en el modelo, ahorrandonos el reescribir
                  código en todos los lugares donde se usan estas consultas SQL.
                </p>

                <h5>¿Qué es SQL injection y cómo se puede prevenir?</h5>
                <p class="white-text"> Es una forma de ataque la cual puede resultar en ataques que afecten
                  a los datos dentro de la base de datos en SQL.
                  <br>
                  Para prevenirlo se deben hacer consultas parametrizadas y tener validación de los inputs 
                  dentro del código.
                </p>

                <h5>Referencias</h5>

                <a href="https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html">
                SQL Injection Prevention: Cheat Sheet</a><br>

              </span></div>
            </li>


<%- include('../views/includes/foot.ejs') %>